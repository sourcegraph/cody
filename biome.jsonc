{
    "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
    "organizeImports": {
        "enabled": true
    },
    "linter": {
        "enabled": true,
        "rules": {
            "recommended": true,
            "nursery": {
                "noDuplicateJsonKeys": "error",
                "noRestrictedImports": {
                    "level": "error",
                    "options": {
                        "paths": {
                            "./telemetry": "Telemetry V1 is deprecated - use 'services/telemetry-v2' instead. Refer to https://github.com/sourcegraph/cody/blob/main/ARCHITECTURE.md#telemetry",
                            "../telemetry": "Telemetry V1 is deprecated - use 'services/telemetry-v2' instead. Refer to https://github.com/sourcegraph/cody/blob/main/ARCHITECTURE.md#telemetry",
                            "../../services/telemetry": "Telemetry V1 is deprecated - use 'services/telemetry-v2' instead. Refer to https://github.com/sourcegraph/cody/blob/main/ARCHITECTURE.md#telemetry",
                            "../../../services/telemetry": "Telemetry V1 is deprecated - use 'services/telemetry-v2' instead. Refer to https://github.com/sourcegraph/cody/blob/main/ARCHITECTURE.md#telemetry",
                            "@sourcegraph/cody-shared/src/telemetry": "Telemetry V1 is deprecated - use 'src/telemetry-v2' instead. Refer to https://github.com/sourcegraph/cody/blob/main/ARCHITECTURE.md#telemetry"
                        }
                    }
                }
            },
            "suspicious": {
                "noExplicitAny": "off",
                "noRedeclare": "off"
            },
            "style": {
                "noNonNullAssertion": "off",
                "noParameterAssign": "off",
                "useTemplate": "off",
                "useNodejsImportProtocol": "error",
                "useImportType": "error",
                "useExportType": "error"
            },
            "complexity": {
                "noUselessTernary": "error"
            },
            "correctness": {
                "noInvalidUseBeforeDeclaration": "error",
                "noUnusedPrivateClassMembers": "error",
                "noUnusedImports": "error"
            }
        }
    },
    "formatter": {
        "indentStyle": "space",
        "indentWidth": 4,
        "lineWidth": 105
    },
    "javascript": {
        "formatter": {
            "semicolons": "asNeeded",
            "quoteStyle": "single",
            "arrowParentheses": "asNeeded",
            "trailingComma": "es5"
        }
    },
    "files": {
        "ignore": [
            "node_modules/",
            "out/",
            "dist/",
            "build/",
            "test-data/",
            ".github/PULL_REQUEST_TEMPLATE.md",
            "vscode/src/testutils/vscode/",
            "agent/bindings/",
            "agent/src/__tests__/",
            "agent/recordings/",
            "agent/src/cli/scip-codegen/scip.ts",
            "lib/ts-worker/pkg/",
            "__snapshots__/",
            "__mocks__/",
            ".vscode-test/",
            ".vscode-test-web/",
            ".test/",
            ".test-reports/",
            "**/.tsconfig.json",
            "**/tsconfig.json",
            ".vscode/*.json",
            "**/fixtures/**",
            "!vscode/test/fixtures/mock-server.ts",
            "vscode/.schema-cache/*.json",
            "vscode/e2e/utils/vscody/resources/**/*",
            "*.snap.json",
            "lib/noxide/node",
            "jetbrains/**",
            "pollyjs/**"
        ]
    },
    "overrides": [
        {
            "include": ["*.json"],
            "json": {
                "formatter": {
                    "indentWidth": 2,
                    "indentStyle": "space"
                }
            }
        },
        {
            "include": ["vscode/src/fetch.node.ts"],
            "linter": {
                "rules": {
                    "complexity": {
                        "useArrowFunction": "off" // we do a whole bunch of patching with arguments keyword (which doesn't work with arrow functions)
                    }
                }
            }
        },
        {
            "include": ["vscode/e2e/utils/**/*.ts"],
            "linter": {
                "rules": {
                    // These rules interfere with how Playwright needs test functions to be written.
                    "complexity": {
                        "noBannedTypes": "off"
                    },
                    "correctness": {
                        "noEmptyPattern": "off"
                    }
                }
            }
        },
        {
            "include": ["**/*.test.ts"],
            "linter": {
                "rules": {
                    "suspicious": {
                        "noFocusedTests": "warn"
                    }
                }
            }
        }
    ],
    "vcs": {
        "enabled": true,
        "clientKind": "git",
        "useIgnoreFile": true
    }
}
