log:
  _recordingName: rewrite-query
  creator:
    comment: persister:fs
    name: Polly.JS
    version: 6.0.6
  entries:
    - _id: 5e7ec73da7091b2c30949b51300b7d0b
      _order: 0
      cache: {}
      request:
        bodySize: 886
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 308
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "You are helping the user search over a codebase. List some filename
                  fragments that would match files relevant to read to answer
                  the user's query. Present your results in a *single* XML list
                  in the following format: <keywords><keyword><value>a single
                  keyword</value><variants>a space separated list of synonyms
                  and variants of the keyword, including acronyms,
                  abbreviations, and expansions</variants><weight>a numerical
                  weight between 0.0 and 1.0 that indicates the importance of
                  the keyword</weight></keyword></keywords>. Here is the user
                  query: <userQuery>type Zoekt struct {</userQuery>"
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 3387
        content:
          mimeType: text/event-stream
          size: 3387
          text: >+
            event: completion

            data: {"completion":"<keywords>\n<keyword>\n<value>zoekt</value>\n<variants>search search_engine indexer</variants>\n<weight>1.0</weight>\n</keyword>\n<keyword>\n<value>struct</value>\n<variants>type class object</variants>\n<weight>0.8</weight>\n</keyword>\n</keywords>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 13 Dec 2024 18:29:36 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: observed-calculated-ip-from-forwarded-for
            value: 73.170.29.73
          - name: observed-x-forwarded-for
            value: 73.170.29.73
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1396
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-12-13T18:29:35.893Z
      time: 1129
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1129
    - _id: b82ffc1fe42b5915aadcd289df2394cd
      _order: 0
      cache: {}
      request:
        bodySize: 1047
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 308
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  You are helping the user search over a codebase. List some
                  filename fragments that would match files relevant to read to
                  answer the user's query. Present your results in a *single*
                  XML list in the following format: <keywords><keyword><value>a
                  single keyword</value><variants>a space separated list of
                  synonyms and variants of the keyword, including acronyms,
                  abbreviations, and expansions</variants><weight>a numerical
                  weight between 0.0 and 1.0 that indicates the importance of
                  the keyword</weight></keyword></keywords>. Here is the user
                  query: <userQuery>type Zoekt struct {
                  	Client zoekt.Searcher

                  	// DisableCache when true prevents caching of Client.List. Useful in
                  	// tests.
                  	DisableCache bool

                  	mu       sync.RWMute
                  </userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 10815
        content:
          mimeType: text/event-stream
          size: 10815
          text: >+
            event: completion

            data: {"completion":"<keywords>\n<keyword>\n<value>zoekt</value>\n<variants>search search_engine indexer</variants>\n<weight>1.0</weight>\n</keyword>\n<keyword>\n<value>client</value>\n<variants>client connection api</variants>\n<weight>0.8</weight>\n</keyword>\n<keyword>\n<value>cache</value>\n<variants>cache caching</variants>\n<weight>0.9</weight>\n</keyword>\n<keyword>\n<value>sync</value>\n<variants>synchronization concurrency locking</variants>\n<weight>0.7</weight>\n</keyword>\n</keywords>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 13 Dec 2024 18:29:37 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: observed-calculated-ip-from-forwarded-for
            value: 73.170.29.73
          - name: observed-x-forwarded-for
            value: 73.170.29.73
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1396
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-12-13T18:29:36.394Z
      time: 1617
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1617
    - _id: 6a4ae086f3434f9fe6c7056db021c4bb
      _order: 0
      cache: {}
      request:
        bodySize: 914
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 308
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "You are helping the user search over a codebase. List some filename
                  fragments that would match files relevant to read to answer
                  the user's query. Present your results in a *single* XML list
                  in the following format: <keywords><keyword><value>a single
                  keyword</value><variants>a space separated list of synonyms
                  and variants of the keyword, including acronyms,
                  abbreviations, and expansions</variants><weight>a numerical
                  weight between 0.0 and 1.0 that indicates the importance of
                  the keyword</weight></keyword></keywords>. Here is the user
                  query: <userQuery>C'est ou la logique pour recloner les
                  dépôts?</userQuery>"
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 4841
        content:
          mimeType: text/event-stream
          size: 4841
          text: >+
            event: completion

            data: {"completion":"<keywords><keyword><value>clone</value><variants>reclone replication repository</variants><weight>0.8</weight></keyword><keyword><value>logic</value><variants>logic reasoning algorithm</variants><weight>0.7</weight></keyword><keyword><value>repository</value><variants>repo git</variants><weight>0.7</weight></keyword></keywords>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 13 Dec 2024 18:29:37 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: observed-calculated-ip-from-forwarded-for
            value: 73.170.29.73
          - name: observed-x-forwarded-for
            value: 73.170.29.73
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1396
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-12-13T18:29:36.897Z
      time: 1160
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1160
    - _id: 9de80475ccb22960d22bf3c52776c1c0
      _order: 0
      cache: {}
      request:
        bodySize: 920
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 308
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "You are helping the user search over a codebase. List some filename
                  fragments that would match files relevant to read to answer
                  the user's query. Present your results in a *single* XML list
                  in the following format: <keywords><keyword><value>a single
                  keyword</value><variants>a space separated list of synonyms
                  and variants of the keyword, including acronyms,
                  abbreviations, and expansions</variants><weight>a numerical
                  weight between 0.0 and 1.0 that indicates the importance of
                  the keyword</weight></keyword></keywords>. Here is the user
                  query: <userQuery>Wie kann ich eine neue Datenbankmigration
                  definieren?</userQuery>"
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 7647
        content:
          mimeType: text/event-stream
          size: 7647
          text: >+
            event: completion

            data: {"completion":"<keywords>\n<keyword>\n<value>database migration</value>\n<variants>db migration db-migration database-migration db_migration</variants>\n<weight>1.0</weight>\n</keyword>\n<keyword>\n<value>migration definition</value>\n<variants>define migration migration definition</variants>\n<weight>0.9</weight>\n</keyword>\n<keyword>\n<value>new migration</value>\n<variants>create migration new-migration</variants>\n<weight>0.8</weight>\n</keyword>\n</keywords>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 13 Dec 2024 18:29:38 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: observed-calculated-ip-from-forwarded-for
            value: 73.170.29.73
          - name: observed-x-forwarded-for
            value: 73.170.29.73
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1396
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-12-13T18:29:37.399Z
      time: 1851
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1851
    - _id: 33b29f536ed2215e32082d71ec6e1e34
      _order: 0
      cache: {}
      request:
        bodySize: 977
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 308
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "You are helping the user search over a codebase. List some filename
                  fragments that would match files relevant to read to answer
                  the user's query. Present your results in a *single* XML list
                  in the following format: <keywords><keyword><value>a single
                  keyword</value><variants>a space separated list of synonyms
                  and variants of the keyword, including acronyms,
                  abbreviations, and expansions</variants><weight>a numerical
                  weight between 0.0 and 1.0 that indicates the importance of
                  the keyword</weight></keyword></keywords>. Here is the user
                  query: <userQuery>Explain how the context window limit is
                  calculated. how much budget is given to @-mentions vs. search
                  context?</userQuery>"
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 11054
        content:
          mimeType: text/event-stream
          size: 11054
          text: >+
            event: completion

            data: {"completion":"<keywords>\n<keyword>\n<value>context window</value>\n<variants>context window limit context-window context_window</variants>\n<weight>0.8</weight>\n</keyword>\n<keyword>\n<value>budget</value>\n<variants>budget allocation budget-allocation budget_allocation</variants>\n<weight>0.7</weight>\n</keyword>\n<keyword>\n<value>mentions</value>\n<variants>@-mentions mentions</variants>\n<weight>0.6</weight>\n</keyword>\n<keyword>\n<value>search context</value>\n<variants>search-context search_context</variants>\n<weight>0.7</weight>\n</keyword>\n</keywords>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 13 Dec 2024 18:29:38 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: observed-calculated-ip-from-forwarded-for
            value: 73.170.29.73
          - name: observed-x-forwarded-for
            value: 73.170.29.73
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1396
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-12-13T18:29:37.899Z
      time: 1702
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1702
    - _id: 7d22422290b9f062ef88f698a9926a08
      _order: 0
      cache: {}
      request:
        bodySize: 972
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 308
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  You are helping the user search over a codebase. List some
                  filename fragments that would match files relevant to read to
                  answer the user's query. Present your results in a *single*
                  XML list in the following format: <keywords><keyword><value>a
                  single keyword</value><variants>a space separated list of
                  synonyms and variants of the keyword, including acronyms,
                  abbreviations, and expansions</variants><weight>a numerical
                  weight between 0.0 and 1.0 that indicates the importance of
                  the keyword</weight></keyword></keywords>. Here is the user
                  query: <userQuery>parse file with tree-sitter. follow these
                  rules:

                  *use the Google Go style guide

                  *panic if parsing fails</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 13956
        content:
          mimeType: text/event-stream
          size: 13956
          text: >+
            event: completion

            data: {"completion":"<keywords>\n<keyword>\n<value>tree-sitter</value>\n<variants>tree sitter treesitter tree-parser</variants>\n<weight>1.0</weight>\n</keyword>\n<keyword>\n<value>parse</value>\n<variants>parsing parser</variants>\n<weight>1.0</weight>\n</keyword>\n<keyword>\n<value>go</value>\n<variants>golang google-go</variants>\n<weight>0.8</weight>\n</keyword>\n<keyword>\n<value>style guide</value>\n<variants>styleguide style-guide</variants>\n<weight>0.7</weight>\n</keyword>\n<keyword>\n<value>panic</value>\n<variants>error handling exception</variants>\n<weight>0.9</weight>\n</keyword>\n</keywords>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 13 Dec 2024 18:29:39 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: observed-calculated-ip-from-forwarded-for
            value: 73.170.29.73
          - name: observed-x-forwarded-for
            value: 73.170.29.73
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1396
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-12-13T18:29:38.400Z
      time: 2462
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 2462
    - _id: f4361c8b5db761accd2b75f8b5fa373d
      _order: 0
      cache: {}
      request:
        bodySize: 818
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: Where is authentication router defined?
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 244
        content:
          mimeType: text/event-stream
          size: 244
          text: >+
            event: completion

            data: {"completion":"<query>authentication router</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:06 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:05.675Z
      time: 753
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 753
    - _id: ec0b39818079e7488897252b7b55713f
      _order: 0
      cache: {}
      request:
        bodySize: 797
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: scan tokens in C++
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 236
        content:
          mimeType: text/event-stream
          size: 236
          text: >+
            event: completion

            data: {"completion":"<query>token scanner C++</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:06 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:06.173Z
      time: 616
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 616
    - _id: a39e3289b04145075671886bd1d45a66
      _order: 0
      cache: {}
      request:
        bodySize: 806
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: parse file with tree-sitter
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 313
        content:
          mimeType: text/event-stream
          size: 313
          text: >+
            event: completion

            data: {"completion":"<query>tree-sitter parse</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:07 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:06.683Z
      time: 1150
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1150
    - _id: aed0295652ac709d2dfb8e2892e2ba04
      _order: 0
      cache: {}
      request:
        bodySize: 798
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: type Zoekt struct {
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 313
        content:
          mimeType: text/event-stream
          size: 313
          text: >+
            event: completion

            data: {"completion":"<query>type Zoekt struct</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:07 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:07.186Z
      time: 557
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 557
    - _id: 459c155e6d591abb8b54b38138363493
      _order: 0
      cache: {}
      request:
        bodySize: 959
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >+
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: type Zoekt struct {
                  	Client zoekt.Searcher

                  	// DisableCache when true prevents caching of Client.List. Useful in
                  	// tests.
                  	DisableCache bool

                  	mu       sync.RWMute

              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 313
        content:
          mimeType: text/event-stream
          size: 313
          text: >+
            event: completion

            data: {"completion":"<query>type Zoekt struct</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:08 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:07.686Z
      time: 513
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 513
    - _id: 553f00d8a557c47f2c0b4aaf0296a22e
      _order: 0
      cache: {}
      request:
        bodySize: 826
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: C'est ou la logique pour recloner les dépôts?
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 246
        content:
          mimeType: text/event-stream
          size: 246
          text: >+
            event: completion

            data: {"completion":"<query>clone repository logic</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:08 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:08.186Z
      time: 528
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 528
    - _id: 413c4fe97d00b44feaf8811fd6f4ca72
      _order: 0
      cache: {}
      request:
        bodySize: 832
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: Wie kann ich eine neue Datenbankmigration definieren?
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 252
        content:
          mimeType: text/event-stream
          size: 252
          text: >+
            event: completion

            data: {"completion":"<query>database migration create</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:09 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:08.687Z
      time: 1146
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1146
    - _id: 06734d4dcd6996396fd6c987ba1faf88
      _order: 0
      cache: {}
      request:
        bodySize: 889
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: Explain how the context window limit is calculated. how much budget is given to @-mentions vs. search context?
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 417
        content:
          mimeType: text/event-stream
          size: 417
          text: >+
            event: completion

            data: {"completion":"<query>context window limit calculation budget @-mentions search</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:09 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:09.191Z
      time: 521
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 521
    - _id: acb341590fe74f110dced64d80aeb3e8
      _order: 0
      cache: {}
      request:
        bodySize: 884
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: parse file with tree-sitter. follow these rules:
                  *use the Google Go style guide

                  *panic if parsing fails
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 313
        content:
          mimeType: text/event-stream
          size: 313
          text: >+
            event: completion

            data: {"completion":"<query>tree-sitter parse</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Thu, 20 Feb 2025 19:19:10 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-20T19:19:09.695Z
      time: 878
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 878
    - _id: 8cfa55b1b6fb3c3831fa60bfa4cab962
      _order: 0
      cache: {}
      request:
        bodySize: 841
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>Where is authentication router defined?</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 244
        content:
          mimeType: text/event-stream
          size: 244
          text: >+
            event: completion

            data: {"completion":"<query>authentication router</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:39 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:38.579Z
      time: 862
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 862
    - _id: 12177fe7ebd1d18da5d0a35a911f2a1e
      _order: 0
      cache: {}
      request:
        bodySize: 820
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>scan tokens in C++</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 300
        content:
          mimeType: text/event-stream
          size: 300
          text: >+
            event: completion

            data: {"completion":"<query>token scan C++</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:39 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:39.079Z
      time: 512
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 512
    - _id: 6aeb69908f8205c68bae9c53762aee1e
      _order: 0
      cache: {}
      request:
        bodySize: 829
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>parse file with tree-sitter</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 313
        content:
          mimeType: text/event-stream
          size: 313
          text: >+
            event: completion

            data: {"completion":"<query>tree-sitter parse</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:40 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:39.583Z
      time: 463
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 463
    - _id: dae03da587de7d7e1477388fbc120140
      _order: 0
      cache: {}
      request:
        bodySize: 821
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>type Zoekt struct {</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 303
        content:
          mimeType: text/event-stream
          size: 303
          text: >+
            event: completion

            data: {"completion":"<query>type Zoekt struct</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:40 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:40.054Z
      time: 454
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 454
    - _id: fc2a37b02c84ad917fa6bbfb3a6be0d5
      _order: 0
      cache: {}
      request:
        bodySize: 982
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>type Zoekt struct {
                  	Client zoekt.Searcher

                  	// DisableCache when true prevents caching of Client.List. Useful in
                  	// tests.
                  	DisableCache bool

                  	mu       sync.RWMute
                  </userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 313
        content:
          mimeType: text/event-stream
          size: 313
          text: >+
            event: completion

            data: {"completion":"<query>type Zoekt struct</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:40 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:40.512Z
      time: 451
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 451
    - _id: 744110c33856b1607a8d9be30dcd43c9
      _order: 0
      cache: {}
      request:
        bodySize: 849
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>C'est ou la logique pour recloner les dépôts?</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 370
        content:
          mimeType: text/event-stream
          size: 370
          text: >+
            event: completion

            data: {"completion":"<query>reclone repository</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:41 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:40.972Z
      time: 450
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 450
    - _id: 980f80db24ab99611dc2eac963a2ffa1
      _order: 0
      cache: {}
      request:
        bodySize: 855
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>Wie kann ich eine neue Datenbankmigration definieren?</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 337
        content:
          mimeType: text/event-stream
          size: 337
          text: >+
            event: completion

            data: {"completion":"<query>database migration create</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:42 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:41.431Z
      time: 682
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 682
    - _id: 4a8906a2806acde757186b3123253f40
      _order: 0
      cache: {}
      request:
        bodySize: 912
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>Explain how the context window limit is calculated. how much budget is given to @-mentions vs. search context?</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 1812
        content:
          mimeType: text/event-stream
          size: 1812
          text: >+
            event: completion

            data: {"completion":"To find information about how the context window limit is calculated and the budget given to @-mentions vs. search context, the following keyword search could be used:\n\n<query>context window limit calculation @-mentions search context</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:42 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:41.934Z
      time: 901
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 901
    - _id: c2418d859eb15b4ba5e4c28937862fbd
      _order: 0
      cache: {}
      request:
        bodySize: 907
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_fc324d3667e841181b0779375f26dedc911d26b303d23b29b1a2d7ee63dc77eb
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: user-agent
            value: / (Node.js v20.4.0)
          - name: x-requested-with
            value: ""
          - name: host
            value: sourcegraph.com
        headersSize: 340
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            fast: true
            maxTokensToSample: 400
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  You are helping a developer answer questions about their
                  codebase. Write a keyword search to help find the relevant
                  files to answer the question. Examples:

                  - Find a symbol by name: `<query>SearchJob</query>`

                  - Find a symbol using keywords: `<query>search indexing queue</query>`

                  - Find where something is implemented: `<query>check for authentication</query>`

                  - Find string literal in code: `<query>"result limit hit"</query>`

                   ONLY return the keyword search. Question: <userQuery>parse file with tree-sitter. follow these rules:
                  *use the Google Go style guide

                  *panic if parsing fails</userQuery>
              - speaker: assistant
            temperature: 0
            topK: 1
        queryString: []
        url: https://sourcegraph.com/.api/completions/stream
      response:
        bodySize: 349
        content:
          mimeType: text/event-stream
          size: 349
          text: >+
            event: completion

            data: {"completion":"<query>tree-sitter parsing error handling</query>","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Mon, 24 Feb 2025 17:14:42 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Cookie,Accept-Encoding,Authorization,Cookie, Authorization,
              X-Requested-With,Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1299
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-02-24T17:14:42.436Z
      time: 558
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 558
  pages: []
  version: "1.2"
