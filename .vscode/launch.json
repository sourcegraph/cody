{
  "version": "0.1.0",
  "configurations": [
    {
      "name": "Launch VS Code Extension (Desktop, recommended)",
      "type": "extensionHost",
      "request": "launch",
      "runtimeExecutable": "${execPath}",
      "preLaunchTask": "Build VS Code Extension (Desktop)",
      "args": [
        "--extensionDevelopmentPath=${workspaceRoot}/vscode",
        "--disable-extension=github.copilot",
        "--disable-extension=sourcegraph.cody-testing",
      ],
      "sourceMaps": true,
      "outFiles": [
        "${workspaceRoot}/vscode/dist/**/*.js"
      ],
      "env": {
        "NODE_ENV": "development",
        "CODY_DEBUG_ENABLE": "true"
        // Enable the Node debug protocol for the TypeScript server:
        // "TSS_DEBUG": "5859"
        // Let extension behave like you're on dotcom when connected locally:
        // "CODY_OVERRIDE_DOTCOM_URL": "https://sourcegraph.test:3443"
        // Enable Sentry in local development mode:
        // "ENABLE_SENTRY": "true"
      }
    },
    {
      "name": "Launch VS Code Extension (Desktop; Separate Instance, rarely used because it requires signing in each time)",
      "type": "extensionHost",
      "request": "launch",
      "runtimeExecutable": "${execPath}",
      "preLaunchTask": "Build VS Code Extension (Desktop)",
      "args": [
        "--user-data-dir=/tmp/vscode-cody-extension-dev-host",
        "--profile-temp",
        "--extensionDevelopmentPath=${workspaceRoot}/vscode",
        "--disable-extension=sourcegraph.cody-testing",
      ],
      "sourceMaps": true,
      "outFiles": [
        "${workspaceRoot}/vscode/dist/**/*.js"
      ],
      "env": {
        "NODE_ENV": "development",
        "CODY_PROFILE_TEMP": "true",
        "CODY_DEBUG_ENABLE": "true",
      }
    },
    {
      "name": "Launch VS Code Extension (Web, in Browser)",
      "type": "node",
      "request": "launch",
      "preLaunchTask": "Build VS Code Extension (Web)",
      "runtimeExecutable": "pnpm",
      "runtimeArgs": [
        "-C",
        "${workspaceFolder}/vscode",
        "run",
        "--silent",
        "_dev:vscode-test-web"
      ],
      "outFiles": [
        "${workspaceFolder}/vscode/dist/**/*.js"
      ]
    },
    {
      "name": "Launch VS Code Extension (Web Extension Host)",
      "type": "extensionHost",
      "debugWebWorkerHost": true,
      "request": "launch",
      "preLaunchTask": "Build VS Code Extension (Web)",
      "outFiles": [
        "${workspaceFolder}/vscode/dist/**/*.js"
      ],
      "args": [
        "--extensionDevelopmentPath=${workspaceRoot}/vscode",
        "--extensionDevelopmentKind=web"
      ]
    },
    {
      "name": "Attach to Agent",
      "port": 9229,
      "request": "attach",
      "skipFiles": [
        "<node_internals>/**"
      ],
      "type": "node"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Launch Agent port 3113",
      "program": "${workspaceFolder}/agent/dist/index.js",
      "runtimeArgs": [
        "--enable-source-maps",
        "--preserve-symlinks"
      ],
      "args": [
        "api",
        "jsonrpc-stdio"
      ],
      "preLaunchTask": "Build Agent",
      "env": {
        "CODY_AGENT_DEBUG_REMOTE": "true",
        "CODY_AGENT_DEBUG_PORT": "3113"
      },
      "sourceMaps": true,
      "skipFiles": [
        "<node_internals>/**"
      ]
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Debug Current File with vitest",
      "autoAttachChildProcesses": true,
      "skipFiles": [
        "<node_internals>/**",
        "**/node_modules/**"
      ],
      "program": "${workspaceFolder}/node_modules/vitest/vitest.mjs",
      // ${relativeFile} will guarantee the "current" file, but fileBaseNameNoExtension
      // can be convenient because running with a file like "graph-section-observer.ts"
      // (the implementation, not the test) will run the correct tests.
      "args": [
        "run",
        "${fileBasenameNoExtension}",
        "--disable-console-intercept",
        "--no-file-parallelism",
        "--no-isolate",
        "--testTimeout=86400",
        "--hookTimeout=86400"
      ],
      "smartStep": true
    },
    {
      "name": "Cody E2Ev2 - Attach",
      "port": 33101,
      "request": "attach",
      "skipFiles": [
        "<node_internals>/**",
        ".test/global/vscode-server/**"
      ],
      "type": "node",
      "cwd": "${workspaceFolder}",
      "sourceMaps": true,
    },
    {
      // TODO: For some reason the Playwright VSCode Extension is really slow when debugging.
      // For now this can provide an alternative.
      "type": "node",
      "request": "launch",
      "name": "Cody E2E - Build & Debug",
      "preLaunchTask": "Build VS Code Extension (Desktop)",
      "autoAttachChildProcesses": true,
      "skipFiles": [
        "<node_internals>/**",
        ".test/global/vscode-server/**"
      ],
      "program": "${workspaceFolder}/vscode/node_modules/playwright/cli.js",
      "env": {
        "VSCDEBUG": "1",
        "FORCE_COLOR": "true"
      },
      "cwd": "${workspaceFolder}",
      // TODO: this doesn't quite seem to be working right yet.
      // "sourceMaps": true,
      // "outFiles": [
      //   "${workspaceRoot}/vscode/dist/**/*.js",
      //   "${workspaceRoot}/vscode/",
      // ],
      "args": [
        "test",
        "-c",
        "${workspaceFolder}/vscode/playwright.v2.config.ts",
        "--timeout=0",
        "--workers=1",
        "--headed"
      ],
      "smartStep": true,
      "outputCapture": "std",
    }
  ],
}
