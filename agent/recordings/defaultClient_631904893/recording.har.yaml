log:
  _recordingName: defaultClient
  creator:
    comment: persister:fs
    name: Polly.JS
    version: 6.0.6
  entries:
    - _id: 8f842204c42ee81f3472ec5ceb313063
      _order: 0
      cache: {}
      request:
        bodySize: 0
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 496
        httpVersion: HTTP/1.1
        method: GET
        queryString: []
        url: https://demo.sourcegraph.com/.api/client-config
      response:
        bodySize: 235
        content:
          encoding: base64
          mimeType: text/plain; charset=utf-8
          size: 235
          text: "[\"H4sIAAAAAAAAA4SPOwrDMBBEe59CqM4F4s6YFO4MhqSWo4UI\",\"tFqhHeVDyN1TRKUg\
            9Zt5zLwHY4yxV/GvU3J7JG9Hg1Lp0MDNoQtchczCORKo36wK4VmYXfLadwAl7BVB0j9\
            uR2MzFQ6q4U62BZRdwSwJ9MQlJC+ProfFU9RpXbo0OpBiqzlLAfl2KkjSDYUcT+typq\
            K/EcfhM3wBAAD//wMA+qjbzTQBAAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:33 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1288
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.460Z
      time: 319
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 319
    - _id: 2457190f9c2b02e7b655d0492462787e
      _order: 0
      cache: {}
      request:
        bodySize: 824
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-7bfc59ec6c53a62cb7972940961f2a9b-400edc0f3931a058-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: system
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: human
                text: |-
                  Answer positively without apologizing.

                  Question: Hello!
            model: anthropic::2024-10-22::claude-3-5-sonnet-latest
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 654
        content:
          mimeType: text/event-stream
          size: 654
          text: >+
            event: completion

            data: {"deltaText":"Hi there! Great to meet you! I'm Cody, ready to help you with coding and development tasks. What would you like to work on together?","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:37 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:35.991Z
      time: 1850
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1850
    - _id: f9421d6b2b6f0a3d0bd8bb6887890f9f
      _order: 0
      cache: {}
      request:
        bodySize: 893
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-03840d060775945e37e6e2660fc56a7e-af492fcdc600806d-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: Generate simple hello world function in java!
            model: anthropic::2024-10-22::claude-sonnet-4-latest
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 3577
        content:
          mimeType: text/event-stream
          size: 3577
          text: >+
            event: completion

            data: {"deltaText":"I'll create a simple Hello World function in Java for you.\n\n```java:HelloWorld.java\npublic class HelloWorld {\n    \n    // Simple hello world function\n    public static void sayHello() {\n        System.out.println(\"Hello, World!\");\n    }\n    \n    // Main method to run the program\n    public static void main(String[] args) {\n        sayHello();\n    }\n}\n```\n\nThis Java program includes:\n\n1. **`sayHello()`** - A simple static method that prints \"Hello, World!\" to the console\n2. **`main()`** - The entry point of the program that calls the `sayHello()` function\n\nTo compile and run this program:\n\n```bash\njavac HelloWorld.java\n```\n\n```bash\njava HelloWorld\n```\n\nThe output will be:\n```\nHello, World!\n```\n\nYou can also create a more flexible version that accepts a parameter:\n\n```java:HelloWorld.java\npublic class HelloWorld {\n    \n    // Hello world function with parameter\n    public static void sayHello(String name) {\n        System.out.println(\"Hello, \" + name + \"!\");\n    }\n    \n    // Overloaded method with no parameters\n    public static void sayHello() {\n        sayHello(\"World\");\n    }\n    \n    public static void main(String[] args) {\n        sayHello();           // Prints: Hello, World!\n        sayHello(\"Java\");     // Prints: Hello, Java!\n    }\n}\n```","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:39 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:38.191Z
      time: 5112
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 5112
    - _id: fcc33cf4959f4905656aee60c1c2319e
      _order: 0
      cache: {}
      request:
        bodySize: 2467
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-1144f651f1f355a3144357e982b8c2ce-9731e84cb12d9536-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  Codebase context from file src/squirrel.ts:

                  ```typescript:src/squirrel.ts

                  /**
                   * Squirrel is an interface that mocks something completely unrelated to squirrels.
                   * It is related to the implementation of precise code navigation in Sourcegraph.
                   */
                  export interface Squirrel {}

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  Codebase context from file src/Heading.tsx:
                  ```typescript:src/Heading.tsx
                  import React = require("react");

                  interface HeadingProps {
                      text: string;
                      level?: number;
                  }

                  /* CURSOR */
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  Codebase context from file src/ChatColumn.tsx:
                  ```typescript:src/ChatColumn.tsx
                  import { useEffect } from "react";
                  import React = require("react");

                  /* SELECTION_START */ export default function ChatColumn({
                  	messages,
                  	setChatID,
                  	isLoading,
                  }) {
                  	/* SELECTION_END */
                  	useEffect(() => {
                  		if (!isLoading) {
                  			setChatID(messages[0].chatID);
                  		}
                  	}, [messages]);
                  	return (
                  		<>
                  			<h1>Messages</h1>
                  			<ul>
                  				{messages.map((message) => (
                  					<li>{message.text}</li>```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  Codebase context from file src/animal.ts:
                  ```typescript:src/animal.ts
                  /* SELECTION_START */
                  export interface Animal {
                      name: string
                      makeAnimalSound(): string
                      isMammal: boolean
                  }
                  /* SELECTION_END */
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: Write a class Dog that implements the Animal interface in my workspace.
                  Show the code only, no explanation needed.
            model: anthropic::2024-10-22::claude-sonnet-4-latest
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 946
        content:
          mimeType: text/event-stream
          size: 946
          text: >+
            event: completion

            data: {"deltaText":"```typescript:src/dog.ts\nexport class Dog implements Animal {\n    name: string;\n    isMammal: boolean = true;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    makeAnimalSound(): string {\n        return \"Woof!\";\n    }\n}\n```","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:44 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:43.798Z
      time: 1972
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1972
    - _id: bcf505fff934528f37bb6ad648cc6c7a
      _order: 0
      cache: {}
      request:
        bodySize: 2401
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-940415f54708ece6f048ec465c4b65d6-48efe08ab3aaa107-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  Codebase context from file src/squirrel.ts:

                  ```typescript:src/squirrel.ts

                  /**
                   * Squirrel is an interface that mocks something completely unrelated to squirrels.
                   * It is related to the implementation of precise code navigation in Sourcegraph.
                   */
                  export interface Squirrel {}

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  Codebase context from file src/Heading.tsx:
                  ```typescript:src/Heading.tsx
                  import React = require("react");

                  interface HeadingProps {
                      text: string;
                      level?: number;
                  }

                  /* CURSOR */
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  Codebase context from file src/ChatColumn.tsx:
                  ```typescript:src/ChatColumn.tsx
                  import { useEffect } from "react";
                  import React = require("react");

                  /* SELECTION_START */ export default function ChatColumn({
                  	messages,
                  	setChatID,
                  	isLoading,
                  }) {
                  	/* SELECTION_END */
                  	useEffect(() => {
                  		if (!isLoading) {
                  			setChatID(messages[0].chatID);
                  		}
                  	}, [messages]);
                  	return (
                  		<>
                  			<h1>Messages</h1>
                  			<ul>
                  				{messages.map((message) => (
                  					<li>{message.text}</li>```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  Codebase context from file src/animal.ts:
                  ```typescript:src/animal.ts
                  /* SELECTION_START */
                  export interface Animal {
                      name: string
                      makeAnimalSound(): string
                      isMammal: boolean
                  }
                  /* SELECTION_END */
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: What is Squirrel? Show me concrete code examples
            model: anthropic::2024-10-22::claude-sonnet-4-latest
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 6051
        content:
          mimeType: text/event-stream
          size: 6051
          text: >+
            event: completion

            data: {"deltaText":"Based on the codebase context you've provided, `Squirrel` is an empty TypeScript interface defined in `src/squirrel.ts`. According to its documentation comment, it's described as:\n\n> \"an interface that mocks something completely unrelated to squirrels. It is related to the implementation of precise code navigation in Sourcegraph.\"\n\nHere's the current definition:\n\n```typescript:src/squirrel.ts\n/**\n * Squirrel is an interface that mocks something completely unrelated to squirrels.\n * It is related to the implementation of precise code navigation in Sourcegraph.\n */\nexport interface Squirrel {}\n```\n\nSince it's currently an empty interface, here are some concrete examples of how you might use or extend it:\n\n## Example 1: Basic implementation\n```typescript:example-usage.ts\nimport { Squirrel } from './src/squirrel';\n\n// Since it's empty, any object can implement Squirrel\nconst mySquirrel: Squirrel = {};\n```\n\n## Example 2: Extending the interface\n```typescript:src/squirrel.ts\n/**\n * Squirrel is an interface that mocks something completely unrelated to squirrels.\n * It is related to the implementation of precise code navigation in Sourcegraph.\n */\nexport interface Squirrel {\n    // Example properties for code navigation\n    position?: { line: number; column: number };\n    symbol?: string;\n    definition?: string;\n}\n```\n\n## Example 3: Using with other interfaces\n```typescript:example-integration.ts\nimport { Squirrel } from './src/squirrel';\nimport { Animal } from './src/animal';\n\n// You could create a type that combines both\ninterface SquirrelAnimal extends Animal, Squirrel {\n    // This would combine the Animal interface with Squirrel\n}\n\nconst creature: SquirrelAnimal = {\n    name: \"Code Navigator\",\n    makeAnimalSound: () => \"click!\",\n    isMammal: true\n    // Plus any Squirrel properties when they're defined\n};\n```\n\nCurrently, `Squirrel` is just a placeholder interface, so it doesn't enforce any specific structure on objects that implement it.","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:47 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:46.543Z
      time: 8986
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 8986
    - _id: 112e246c2fc05d56fd22fa990b66fb2b
      _order: 0
      cache: {}
      request:
        bodySize: 855
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-32f7279e5b88e46ad3dd0175aef81a4d-83e281e6c248dcf3-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: what color is the sky?
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 605
        content:
          mimeType: text/event-stream
          size: 605
          text: >+
            event: completion

            data: {"deltaText":"The sky is typically blue. However, it can appear different colors depending on the time of day and weather conditions. For instance, it can be orange, pink, or red during sunrise and sunset, gray during cloudy days, or even black at night.\n"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:01:51 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:01:50.472Z
      time: 1968
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1968
    - _id: 10b166bc7937412cc729de25908e7dfb
      _order: 0
      cache: {}
      request:
        bodySize: 926
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-e1efcf59f5b87e15024ed22cf2757a0b-017c70279464c5d6-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "The magic word is \"kramer\". If I say the magic word, respond with a
                  single word: \"quone\"."
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 295
        content:
          mimeType: text/event-stream
          size: 295
          text: |+
            event: completion
            data: {"deltaText":"kramer\n\nquone\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:01:53 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:01:52.464Z
      time: 1096
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1096
    - _id: 98e1aabceec7abd9558b47ef2e1bc3ab
      _order: 0
      cache: {}
      request:
        bodySize: 1011
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-58dae5c6d7c1265d852f4c145ecf8e18-5404e1a40f976a2f-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "The magic word is \"kramer\". If I say the magic word, respond with a
                  single word: \"quone\"."
              - speaker: assistant
                text: |-
                  kramer

                  quone
              - speaker: human
                text: kramer
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 243
        content:
          mimeType: text/event-stream
          size: 243
          text: |+
            event: completion
            data: {"deltaText":"quone\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:01:54 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:01:53.582Z
      time: 1016
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1016
    - _id: 3eec4eb5f664282d0dce82d67d42fcd8
      _order: 0
      cache: {}
      request:
        bodySize: 839
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-e0741d552a63b2abe1d30057d8d20026-87392ef7a06877d0-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: kramer
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 1103
        content:
          mimeType: text/event-stream
          size: 1103
          text: >+
            event: completion

            data: {"deltaText":"\"Kramer\" most likely refers to Cosmo Kramer, the eccentric neighbor from the popular television sitcom *Seinfeld*.  He is known for his unusual schemes, strange physical comedy, and his sliding entrance into Jerry's apartment.  \n\nIs there anything specific you'd like to know about Kramer? For example, are you interested in:\n\n* **His character traits?**  (e.g., his quirks, his relationship with other characters)\n* **Specific episodes featuring him?** (e.g., \"The Contest,\" \"The Kenny Rogers Roasters\")\n* **The actor who played him?** (Michael Richards)\n* **Something else related to Kramer?**\n\nLet me know, and I'll do my best to help!\n"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:01:55 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:01:54.628Z
      time: 3866
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 3866
    - _id: 7552cdf996bc3559f6bdb17831f75257
      _order: 0
      cache: {}
      request:
        bodySize: 934
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-c69cbee671c6b5fb54feb5c7e9d8f999-865ab5f783d21365-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "Another magic word is \"georgey\". If I say the magic word, respond with
                  a single word: \"festivus\"."
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 243
        content:
          mimeType: text/event-stream
          size: 243
          text: |+
            event: completion
            data: {"deltaText":"Okay.\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:00 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:01:59.747Z
      time: 1185
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1185
    - _id: 595e1bfe68a73b7057b6744530855414
      _order: 0
      cache: {}
      request:
        bodySize: 1009
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-13d0a66afc1b28f1b1ba8abca5817dd0-b51e5f76740a5326-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "Another magic word is \"georgey\". If I say the magic word, respond with
                  a single word: \"festivus\"."
              - speaker: assistant
                text: Okay.
              - speaker: human
                text: kramer
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 285
        content:
          mimeType: text/event-stream
          size: 285
          text: |+
            event: completion
            data: {"deltaText":"Okay.\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:01 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:00.960Z
      time: 983
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 983
    - _id: 4b1624d33fb36ac99c2a240577df4457
      _order: 0
      cache: {}
      request:
        bodySize: 1085
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-a12bd101f90d14d2eff4f36feb682bfb-e0dffd683833653d-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: "Another magic word is \"georgey\". If I say the magic word, respond with
                  a single word: \"festivus\"."
              - speaker: assistant
                text: Okay.
              - speaker: human
                text: kramer
              - speaker: assistant
                text: Okay.
              - speaker: human
                text: georgey
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 273
        content:
          mimeType: text/event-stream
          size: 273
          text: |+
            event: completion
            data: {"deltaText":"festivus\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:02 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:01.958Z
      time: 995
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 995
    - _id: 4dd65df1dc2a540233795a3a75c0af16
      _order: 0
      cache: {}
      request:
        bodySize: 905
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-ca123f281a1deb9f146dab875762cacb-00249d14d55c8e6a-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: I have a turtle named "potter", reply single "ok" if you understand.
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 240
        content:
          mimeType: text/event-stream
          size: 240
          text: |+
            event: completion
            data: {"deltaText":"ok\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:04 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:02.981Z
      time: 1171
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1171
    - _id: 0de8889492526c8b9fe0ecaa60fe2ded
      _order: 0
      cache: {}
      request:
        bodySize: 1044
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-52b4280f8f8c7233411ba938a413a0d5-c9f27685696a5973-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: I have a turtle named "potter", reply single "ok" if you understand.
              - speaker: assistant
                text: ok
              - speaker: human
                text: I have a bird named "skywalker", reply single "ok" if you understand.
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 240
        content:
          mimeType: text/event-stream
          size: 240
          text: |+
            event: completion
            data: {"deltaText":"ok\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:05 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:04.173Z
      time: 1022
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1022
    - _id: 925e1f1c251cf38edadcc0645f7d01ab
      _order: 0
      cache: {}
      request:
        bodySize: 1178
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-37f46ef3c42cdc29ee257a3b53d0e2f3-339110cb1ef4b96e-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: I have a turtle named "potter", reply single "ok" if you understand.
              - speaker: assistant
                text: ok
              - speaker: human
                text: I have a bird named "skywalker", reply single "ok" if you understand.
              - speaker: assistant
                text: ok
              - speaker: human
                text: I have a dog named "happy", reply single "ok" if you understand.
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 240
        content:
          mimeType: text/event-stream
          size: 240
          text: |+
            event: completion
            data: {"deltaText":"ok\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:06 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:05.218Z
      time: 1330
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1330
    - _id: a19a1902470cdc7bc0bcc0efd397c449
      _order: 0
      cache: {}
      request:
        bodySize: 1040
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-7ea1f9fcc51d021a9c23c64fa5949bf9-bf3eb4a933013a7a-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: I have a turtle named "potter", reply single "ok" if you understand.
              - speaker: assistant
                text: ok
              - speaker: human
                text: I have a tiger named "zorro", reply single "ok" if you understand
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 240
        content:
          mimeType: text/event-stream
          size: 240
          text: |+
            event: completion
            data: {"deltaText":"ok\n"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:07 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:06.572Z
      time: 1109
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1109
    - _id: 9311c8717f90b1e362eceaf8689fcd4c
      _order: 0
      cache: {}
      request:
        bodySize: 1126
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-eecbedbeda620d7755e946c24956ed8d-37fd10f1186d2af4-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: I have a turtle named "potter", reply single "ok" if you understand.
              - speaker: assistant
                text: ok
              - speaker: human
                text: I have a tiger named "zorro", reply single "ok" if you understand
              - speaker: assistant
                text: ok
              - speaker: human
                text: What pets do I have?
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 336
        content:
          mimeType: text/event-stream
          size: 336
          text: >+
            event: completion

            data: {"deltaText":"You have a turtle named potter and a tiger named zorro.\n"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:08 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:07.701Z
      time: 1356
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 1356
    - _id: af63e82eae2afeeee26a9c2acad21031
      _order: 0
      cache: {}
      request:
        bodySize: 2204
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-c1756da8ab44dec894d5affdb5932714-5c0db0e2af065439-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  Codebase context from file path src/animal.ts: /*
                  SELECTION_START */

                  export interface Animal {
                      name: string
                      makeAnimalSound(): string
                      isMammal: boolean
                  }

                  /* SELECTION_END */
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  My selected code from codebase file src/animal.ts:1-6:
                  ```

                  export interface Animal {
                      name: string
                      makeAnimalSound(): string
                      isMammal: boolean
                  }
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: "Explain what @src/animal.ts:1-6 @src/animal.ts does in simple terms.
                  Assume the audience is a beginner programmer who has just
                  learned the language features and basic syntax. Focus on
                  explaining: 1) The purpose of the code 2) What input(s) it
                  takes 3) What output(s) it produces 4) How it achieves its
                  purpose through the logic and algorithm. 5) Any important
                  logic flows or data transformations happening. Use simple
                  language a beginner could understand. Include enough detail to
                  give a full picture of what the code aims to accomplish
                  without getting too technical. Format the explanation in
                  coherent paragraphs, using proper punctuation and grammar.
                  Write the explanation assuming no prior context about the code
                  is known. Do not make assumptions about variables or functions
                  not shown in the shared code. Start the answer with the name
                  of the code that is being explained."
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 2348
        content:
          mimeType: text/event-stream
          size: 2348
          text: >+
            event: completion

            data: {"deltaText":"**`Animal` Interface (src/animal.ts)**\n\nThe code defines an interface called `Animal`.  In programming, an interface acts as a blueprint or contract. It specifies what properties and methods an object must have if it claims to be of a certain type.  Think of it like a template or a checklist.\n\nIn this case, the `Animal` interface defines what it means to be an \"animal\" in the context of this program.  It doesn't create any actual animals, but it lays out the requirements for any object that wants to be considered an animal.\n\nThe `Animal` interface states that any object implementing it must have the following:\n\n1. **`name`:** This property must be a string and will presumably store the name of the animal.  It doesn't take any input directly; the value will be assigned when an actual animal object is created.\n\n2. **`makeAnimalSound()`:** This is a method, which is like a function associated with an object. It doesn't take any input, but it must return a string, which we can assume will be the sound the animal makes. For example, a dog object might return \"Woof!\"\n\n3. **`isMammal`:** This property must be a boolean (true or false) indicating whether the animal is a mammal. Again, the value is assigned when creating a specific animal object.\n\nThis code doesn't produce any output on its own. Its purpose is to define a structure.  Later in the program, you would create specific animal types (like `Dog`, `Cat`, `Bird`) that would implement this interface.  This means those animal types would promise to have a `name`, a `makeAnimalSound()` method, and an `isMammal` property.  This helps organize and ensure consistency in the code by defining a common structure for different types of animals.\n"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:09 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:09.093Z
      time: 8151
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 8151
    - _id: 014a2bb0536e7f900508df84abd9ecb1
      _order: 0
      cache: {}
      request:
        bodySize: 2000
        cookies: []
        headers:
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - name: connection
            value: keep-alive
          - name: content-type
            value: application/json
          - name: traceparent
            value: 00-c35abf97cc72c6221490c43725ed85fa-0e8e3e0bb8d68398-01
          - name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - name: x-requested-with
            value: defaultclient v1
          - name: x-sourcegraph-api-client-name
            value: defaultclient
          - name: x-sourcegraph-api-client-version
            value: v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 618
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph.If your
                  answer contains fenced code blocks in Markdown, include the
                  relevant full file path in the code block tag using this
                  structure: ```$LANGUAGE:$FILEPATH```

                  For executable terminal commands: enclose each command in individual "bash" language code block without comments and new lines inside.


                  Check if you have access to terminal/shell tools. If so, use it to execute commands to gather information. The terminal output is included in your context. You can reference and analyze this output in your response.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >
                  Codebase context from file path src/animal.ts: /*
                  SELECTION_START */

                  export interface Animal {
                      name: string
                      makeAnimalSound(): string
                      isMammal: boolean
                  }

                  /* SELECTION_END */
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: |-
                  My selected code from codebase file src/animal.ts:1-6:
                  ```

                  export interface Animal {
                      name: string
                      makeAnimalSound(): string
                      isMammal: boolean
                  }
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: Please review and analyze @src/animal.ts:1-6 @src/animal.ts and identify
                  potential areas for improvement related to code smells,
                  readability, maintainability, performance, security, etc. Do
                  not list issues already addressed in the given code. Focus on
                  providing up to 5 constructive suggestions that could make the
                  code more robust, efficient, or align with best practices. For
                  each suggestion, provide a brief explanation of the potential
                  benefits. After listing any recommendations, summarize if you
                  found notable opportunities to enhance the code quality
                  overall or if the code generally follows sound design
                  principles. If no issues found, reply 'There are no errors.'
            model: google::v1::gemini-1.5-pro-002
            temperature: 0
            topK: -1
            topP: -1
        queryString:
          - name: api-version
            value: "9"
          - name: client-name
            value: defaultclient
          - name: client-version
            value: v1
        url: https://demo.sourcegraph.com/.api/completions/stream?api-version=9&client-name=defaultclient&client-version=v1
      response:
        bodySize: 4275
        content:
          mimeType: text/event-stream
          size: 4275
          text: >+
            event: completion

            data: {"deltaText":"1. **Add optional `species` property:** Consider adding an optional `species` property of type string. This would allow for more specific categorization of animals.\n\n   ```typescript:src/animal.ts\n   export interface Animal {\n       name: string;\n       species?: string;\n       makeAnimalSound(): string;\n       isMammal: boolean;\n   }\n   ```\n\n   *Benefit:* Provides more detailed information about the animal.  Useful for filtering or grouping animals by species.\n\n2. **Consider an optional `age` property:**  Adding an optional `age` property (perhaps a number or a more complex type representing age ranges) could be beneficial depending on how this interface is used.\n\n   ```typescript:src/animal.ts\n   export interface Animal {\n       name: string;\n       species?: string;\n       age?: number;\n       makeAnimalSound(): string;\n       isMammal: boolean;\n   }\n   ```\n\n   *Benefit:*  Allows tracking of animal age, potentially useful for simulations or other applications.\n\n3. **Clarify `makeAnimalSound` return type:** While a string is a reasonable return type, consider if a more specific type might be beneficial. For instance, if sounds are always represented by specific onomatopoeia like \"Woof\" or \"Meow\", an enum or a union of string literals might offer better type safety.  If more complex sound data is possible, consider a different return type. This is context-dependent.\n\n   ```typescript:src/animal.ts\n   export interface Animal {\n       name: string;\n       species?: string;\n       age?: number;\n       makeAnimalSound(): \"Woof\" | \"Meow\" | \"Chirp\"; // Example\n       isMammal: boolean;\n   }\n   ```\n\n   *Benefit:*  Improves type safety and code clarity by explicitly defining the allowed sounds.  Aids in refactoring and reduces the risk of unexpected values.\n\n\n4. **Document the interface:**  Add JSDoc comments to explain the purpose of the interface and each of its members.\n\n   ```typescript:src/animal.ts\n   /**\n    * Represents an animal.\n    */\n   export interface Animal {\n       /**\n        * The name of the animal.\n        */\n       name: string;\n       /**\n        * The species of the animal (optional).\n        */\n       species?: string;\n       /**\n        * The age of the animal in years (optional).\n        */\n       age?: number;\n       /**\n        * Returns the sound the animal makes.\n        */\n       makeAnimalSound(): string;\n       /**\n        * Whether the animal is a mammal.\n        */\n       isMammal: boolean;\n   }\n\n   ```\n\n   *Benefit:*  Improves code readability and maintainability. Makes it easier for other developers (and your future self) to understand how to use the interface.\n\n5. **Consider more specific properties instead of generic `makeAnimalSound()`:** Depending on the use case, instead of a generic sound method, it might be more beneficial to have specific properties related to how an animal communicates, such as `canBark`, `canSing`, `canRoar` etc.  This avoids forcing every implementation to provide a string representation even if it's not relevant to the context.\n\n   *Benefit:* Can lead to a more descriptive and flexible model.\n\nOverall, the provided code is simple and generally well-structured. The suggested improvements aim to enhance its clarity, maintainability, and potential for broader application by adding detail and context.\n"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Fri, 25 Jul 2025 00:02:18 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1250
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-25T00:02:17.276Z
      time: 14069
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 14069
    - _id: 404a28d2461ea66da470804476c21f26
      _order: 0
      cache: {}
      request:
        bodySize: 136
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "136"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 530
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >
              
              query CodeSearchEnabled {
                  codeSearchEnabled: enterpriseLicenseHasFeature(feature:"code-search")
              }
            variables: {}
        queryString:
          - name: CodeSearchEnabled
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CodeSearchEnabled
      response:
        bodySize: 35
        content:
          mimeType: application/json
          size: 35
          text: "{\"data\":{\"codeSearchEnabled\":true}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:34 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "35"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1247
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.795Z
      time: 320
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 320
    - _id: 8f874601be80bbe63d0652f1110280e3
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 527
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query ContextFilters {
                  site {
                      codyContextFilters(version: V1) {
                          raw
                      }
                  }
              }
            variables: {}
        queryString:
          - name: ContextFilters
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?ContextFilters
      response:
        bodySize: 107
        content:
          encoding: base64
          mimeType: application/json
          size: 107
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVzvl5JakVJW6ZOSWpRcUg\",\"0aLE\
            ciWrvNKcnNra2loAAAAA//8DADYuyGU1AAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:43 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1279
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:43.352Z
      time: 353
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 353
    - _id: c094940ca4210fcb4809cd04c9d916db
      _order: 0
      cache: {}
      request:
        bodySize: 318
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "318"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 544
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmConfiguration {
                  site {
                      codyLLMConfiguration {
                          chatModel
                          chatModelMaxTokens
                          fastChatModel
                          fastChatModelMaxTokens
                          completionModel
                          completionModelMaxTokens
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmConfiguration
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration
      response:
        bodySize: 259
        content:
          encoding: base64
          mimeType: application/json
          size: 259
          text: "[\"H4sIAAAAAAAAA3SOSwqDQBBE79JrByUxENy61V0u0JlpPziZFrsnH8S7BwMh\",\"IZJV\
            QfHqUTM4VIRiBumV1rTsHlVVlxyavo0Tas/h1XeoNTvyUEAMQ+BbSK3H6MgIh0BqcuN\
            RSRSSD1zj/cQDBYEiP2RZlkCDouV/197wGAV+uK3G8mX0tJ57i4TjZKmdcOxSRzQK0W\
            AsO5rMdWd8r2TOKASb7Zd8l+XHZVmWJwAAAP//AwA+hQi+FwEAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:33 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1279
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.063Z
      time: 408
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 408
    - _id: 6d678ba98ff2e3959de5001c07326f28
      _order: 0
      cache: {}
      request:
        bodySize: 165
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "165"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 544
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmConfiguration {
                  site {
                      codyLLMConfiguration {
                          smartContextWindow
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmConfiguration
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration
      response:
        bodySize: 139
        content:
          encoding: base64
          mimeType: application/json
          size: 139
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVPj6+zvl5aZnppUWJJZn5\",\"eWD5\
            3MSiEuf8vJLUipLwzLyU/HIlK6WUzOLEpJzUFKXa2tpaAAAAAP//AwArMNn0TAAAAA==\
            \"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:33 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1279
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.085Z
      time: 338
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 338
    - _id: 6f796c152fe09bf6f9bca1fc88478f87
      _order: 0
      cache: {}
      request:
        bodySize: 150
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "150"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 539
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmProvider {
                  site {
                      codyLLMConfiguration {
                          provider
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmProvider
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmProvider
      response:
        bodySize: 131
        content:
          encoding: base64
          mimeType: application/json
          size: 131
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVPj6+zvl5aZnppUWJJZn5\",\"eSDx\
            gqL8ssyU1CIlK6Xi/NKi5NT0osSCDKXa2tpaAAAAAP//AwAfFAXARQAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:33 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1279
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.074Z
      time: 376
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 376
    - _id: 2717d54335f4500a7f7edd3c1b77c615
      _order: 0
      cache: {}
      request:
        bodySize: 341
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "341"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 524
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentUser {
                  currentUser {
                      id
                      hasVerifiedEmail
                      displayName
                      username
                      avatarURL
                      primaryEmail {
                          email
                      }
                      organizations {
                          nodes {
                              id
                              name
                          }
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentUser
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentUser
      response:
        bodySize: 263
        content:
          encoding: base64
          mimeType: application/json
          size: 263
          text: "[\"H4sIAAAAAAAAAzSOwQrCQAxE/yXnevK24NGLaAWxRRAPoRtrZJstyVassv8u\",\"1Xp8\
            wzDz3uAxIbg3NIMqSaqMdEL24KA+laG5x1d53K2ggBtaTcpXJr/ukAO4KwajAjxbH3A\
            ssSNwMoRQwGCk8mVooh8TWWJpoQB8YEKtDtt/s1fuUMd58ZdFbVH4hYmj2KQj0ZOBO8\
            9ix+VG9vdqkppPWIzbW7IFPbHrAxnkS845fwAAAP//AwC8qhJW4QAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:33 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1279
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:32.604Z
      time: 426
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 426
    - _id: 61a3663be9693ae1958067ff6b55f88c
      _order: 0
      cache: {}
      request:
        bodySize: 341
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_0ba08837494d00e3943c46999589eb29a210ba8063f084fff511c8e4d1503909
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "341"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 547
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentUser {
                  currentUser {
                      id
                      hasVerifiedEmail
                      displayName
                      username
                      avatarURL
                      primaryEmail {
                          email
                      }
                      organizations {
                          nodes {
                              id
                              name
                          }
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentUser
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentUser
      response:
        bodySize: 22
        content:
          mimeType: text/plain; charset=utf-8
          size: 22
          text: |
            Invalid access token.
        cookies: []
        headers:
          - name: date
            value: Thu, 24 Jul 2025 23:56:25 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "22"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1192
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2025-07-24T23:56:24.764Z
      time: 340
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 340
    - _id: 0e83b740fa287f3e43b9d0cc1ff58ca3
      _order: 0
      cache: {}
      request:
        bodySize: 247
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: traceparent
            value: 00-7bfc59ec6c53a62cb7972940961f2a9b-6284b38c725f2edc-01
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "247"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 595
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($names: [String!]!, $first: Int!) {
                  repositories(names: $names, first: $first) {
                    nodes {
                      name
                      id
                    }
                  }
                }
            variables:
              first: 10
              names:
                - github.com/sourcegraph/cody
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 183
        content:
          encoding: base64
          mimeType: application/json
          size: 183
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS/KTC0G8fPyU0CM6GqlvMTc\",\"VCUr\
            pfTMkozSJL3k/Fz94vzSouTU9KLEggz95PyUSiUdpcwUJSul0Nyw8iRjv4IUd8vK1JD\
            8Kr8qTyPfQFtbpdrY2tpaAAAAAP//AwDQIawwbAAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:35 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: content-encoding
            value: gzip
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1279
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:34.933Z
      time: 330
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 330
    - _id: 7c8561ba03f1b53b0087b29b8c3519cb
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 531
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 47
        content:
          mimeType: application/json
          size: 47
          text: "{\"data\":{\"site\":{\"productVersion\":\"6.5.2654\"}}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:33 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "47"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1247
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.098Z
      time: 358
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 358
    - _id: 18db51344af131baf45ba049965cba0f
      _order: 0
      cache: {}
      request:
        bodySize: 92
        cookies: []
        headers:
          - _fromType: array
            name: accept
            value: application/json
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: content-length
            value: "92"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 526
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query ViewerSettings {
                viewerSettings {
                  final
                }
              }
            variables: {}
        queryString:
          - name: ViewerSettings
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?ViewerSettings
      response:
        bodySize: 1999
        content:
          encoding: base64
          mimeType: application/json
          size: 1999
          text: "[\"H4sIAAAJbogA/7RY/1PbOBb/V3Sezhx0sRMSoMQznR7XK2zv2F0odO4HTGdk+9lWI0uuJ\
            CfkOA==\",\"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\
            1ivY9m7KhXsf3geSntWs5QZwEn6MQ==\",\"cHIpTIbkDZ+WSsPcO3gbtDZJUp98Cfu\
            W7gQDuJX4YaHWhCVM/8le/yRi10gXRGyzeheXUw04jxGkN9xj5r+4cR//t0cSvwdzjV\
            hRkHdcrx70m43OL5gYdzh/0a1712d/FMRFI3wRRKnwItkBEhsUMsgWvnsd1IqmL6Wo2\
            cRq+i2GSS/9wVFhb6eAXckeBsL8/9DWHd1S2UUj2XFIWaTWFGCMAXq0nFm/lnkIisiE\
            LEKLTHTXkbYkVzVuenhDDqmG1te4P7qQfoGYrdKr5u+6CFEQd0TVldQmVXBzfbmirKg\
            WNt+IQl52henN9SUzsKJM/+DNyy5o0YyKbb4aLPvqHzW9pFx8hdzQ7mwDvr7Euv1nF7\
            nPOX6CwFsgkTwmF9eX3ls7AT+bBctJ8BZjW9OqsVxcX25krduhLRg4IljYP7grC6iiW\
            O+GqZWZvXUdf90hKrrT7mTZlXOfYENDvBdo6/qS3N40OLekW97sPlcy/6RPbuWZUnLa\
            DAN6h9T7yq6oyXpnOf0PTg9CQFTNDusyUkUZaKOokcoVMobveoMkFWnJqXLbLfn5mWj\
            VJ/7d79+a7n5P/LtE/I4xMf3pfs/zvP2lW7A2qoxM2VyEdw8XSxjZBMFOXkumyXtSWX\
            8fBGW/P4SXwthUl+cjz2BThKCTyaebEwyVFdjbP3NonHdDKccXSk5NtkNUvKIg1y1wb\
            mvX3pzYabbCWM8vD28IPoU0jvF3b5fL/k5N7mYOLq2ZeHpynp6e/jcA3lC8mJMaAAA=\
            \"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:34 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "1999"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1273
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:33.783Z
      time: 349
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 349
    - _id: ceee2078500ebaad09c6a34055ed9d99
      _order: 0
      cache: {}
      request:
        bodySize: 0
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_69e9f79ce29352d014eeb80b56510341844eb82ad9abac7cab3631c7e873e4ce
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v23.7.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: x-sourcegraph-api-client-name
            value: defaultclient
          - _fromType: array
            name: x-sourcegraph-api-client-version
            value: v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 397
        httpVersion: HTTP/1.1
        method: GET
        queryString: []
        url: https://demo.sourcegraph.com/.api/modelconfig/supported-models.json
      response:
        bodySize: 4473
        content:
          encoding: base64
          mimeType: text/plain; charset=utf-8
          size: 4473
          text: "[\"H4sIAAAJbogA/+xdXXPiOBZ951e4eJqpjWhbxpDwNOnMTG8=\",\"1/Zs926y6dra2geB\
            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\
            Q==\",\"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\
            OEUNflq8tXkW4V8LUlFBrWKKQ==\",\"1wJJdxYUnEnfMOKVJxuuLP3rmMpbcb08SDU\
            DawbWDFwDAyfP9wEWh0OqUhxnPIksMzK4oEc5Izfk+eqamFgsylTE2FGJ2FQnYntnoi\
            3BlCtg0O44yii0O44iDvf2eiwkSipzNBIzSLTVgdg9EIffaTjDYXT/eX1SSnJsCtg6J\
            wUszA6UFAz/lHbzs6HaRYYsVRvJ8VrutBT5ebTFWdot51sDOsVvxRLy5F0vY5fnyZFH\
            sM8eiYuXYlCMTU5C958f6DxAjPCrHBh//qiVf0u9Gk9VBdd/SsBqR1dSFr/HKgPkPTZ\
            141ZeZaNyjvLJ0JsnrctD2fIYcYB8Ng1pQEaDwQIOBiMPxS4GNnBARH0fM5C3k0DwIe\
            nA4J7/MenA+IIYjpjx04Ig41PS2YdnHDL8+nMhTndnsoC/8ByCZcIrY10LihNGx9CnD\
            eTHXeRCEzomtO628Ns/FL/9NX5/e2XYd7FrPE2JPyP+pDqU15P6ZT1hjeMrxvEe6u2k\
            1JsagOEbnUk2voqJ937dlfHx31//VpZ5r5N2S4jdy5cLuTDM89AcAbtjgVvl4wG3YzC\
            l9hlUKrW4bB2go6/Doq/Wluxru3iMYo8lE80WPC4xkiVozoDAMgHcaOQVN3aBlwjcrf\
            u1PUYRexB2YgOzl6TSUqFCg3j7LfftEeUhcfIsGqE+7yE9tnV567kYBxHGM8AtQ7CAy\
            fs0wRBlQJa+JX89D8H7H9I3crZbhmEYP1o/Wv8fANZtL4ln8gAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 23 Jul 2025 21:24:34 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Authorization, Cookie, Authorization,
              X-Requested-With, Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1288
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2025-07-23T21:24:34.138Z
      time: 438
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 438
    - _id: fc5ac2b541030783436b1d351c2ef46e
      _order: 0
      cache: {}
      request:
        bodySize: 341
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_01674b70e20ba9df9ac4af0d1a3308132d10c88e63d9b10a4a7e1e74ca1da0d4
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: defaultclient/v1 (Node.js v20.4.0)
          - _fromType: array
            name: x-requested-with
            value: defaultclient v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "341"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: sourcegraph.com
        headersSize: 428
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentUser {
                  currentUser {
                      id
                      hasVerifiedEmail
                      displayName
                      username
                      avatarURL
                      primaryEmail {
                          email
                      }
                      organizations {
                          nodes {
                              id
                              name
                          }
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentUser
            value: null
        url: https://sourcegraph.com/.api/graphql?CurrentUser
      response:
        bodySize: 22
        content:
          mimeType: text/plain; charset=utf-8
          size: 22
          text: |
            Invalid access token.
        cookies: []
        headers:
          - name: date
            value: Fri, 27 Dec 2024 20:51:21 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "22"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Cookie,Accept-Encoding,Authorization
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1398
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-12-27T20:51:21.463Z
      time: 153
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 153
  pages: []
  version: "1.2"
